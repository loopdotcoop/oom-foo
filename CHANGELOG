# Changelog

1.0.0 After oominit and oommake
1.0.1 With oomtility/wrap.js
1.0.2 Updated jQuery and the Traceur Runtime
1.0.3 With fonts and icons
1.0.4 Better icon
1.0.5 Even better icon
1.0.6 ctrl-alt-0 to ctrl-alt-3 changes ecmaswitch
1.0.7 With oomtility/bump.js
1.0.8 oomtility/init.js starts projects at 1.0.0 and prompts for colour
1.0.9 oomtility/test.js in line with other Oomtilities
1.0.10 Tidying and fixing oomtility/make.js
1.0.11 oomtility/init.js shows a result after a successful run
1.0.12 Improved App.6.js and its tests
1.0.13 oomtility/make.js generates methods, eg $ oomauto Base.foo topLevel Base
1.0.14 oomtility/wrap.js updates oomtility/wrapped.js with oomtility/wrap/
1.0.15 With oomtility/http.js, which runs a beefy server and dev environment
1.1.0 All oomtility/wrap/ files in place
1.1.1 With Aframe and Vue; oomtility/wrapped.js writes large files in chunks
1.1.2 Starting to look at Vue component integration
1.1.3 Better naming of demo files
1.1.4 Demos generate and show nested Vue components
1.1.5 oomtility/init.js --standard-demo to speed up oom-foo development
1.1.6 Demos show very basic A-Frame scene
1.1.7 Demo uses a custom A-Frame primative <a-oomfoo> for OomFoo
1.1.8 Demo uses Vue to link `firstProp` (0 to 4) to A-Frame cube colour
1.2.0 Initial ‘src/main/Bases.6.js’, El, Mix and ElMix
1.2.1 Bases.6.js has a test. Better ‘support/test.html’ test results display
1.2.2 With `$ oominit --minimal`, the opposite of `$ oominit --kitchen-sink`
1.2.3 `$ oominit --website --faster; oomwrap --auto-only; oommake --es6-only`
1.2.4 `Oom.stat` for static properties, `myOom.attr` for instance properties
1.2.5 `Oom` has `stat.instTally` and `attr.INST_INDEX`
1.2.6 Initial `Oom` Browser test, testing a Vue component
1.2.7 Using Chai and Mocha instead of klud.js
1.2.8 All wrap/Bases-* and wrap/Class-* tests use Mocha (and no jQuery)
1.2.9 Bases-browser.6.js tests static properties on Oom.enduserMainVue
1.2.10 Bases-browser.6.js tests a <member-table>
1.2.11 *-nonbrowser.6.js and *-universal.6.js become *-node.6.js and *-all.6.js
1.2.12 Bases-all.6.js and Bases-browser.6.js test instance attributes
1.2.13 oomtility/wrap/Class-all.6.js follows Bases-all.6.js
1.2.14 oomtility/wrap/Class-browser.6.js follows Bases-browser.6.js
1.2.15 <member-table> shows ‘Type’ and ‘Defined In’ (typeStr and DefinedInStr)
1.2.16 stat and attr Oom.reset(); inherited statics share a ‘shadow’
1.2.17 Reinstated `inst_tally` and `inst_index`
1.2.18 With `Oom.mixin()` and the special ${{__LOCATION__}} template variable
1.2.19 Refactored `KIT.define()` and added `perClass` schema boolean
1.2.20 Full set of `Oom.Foo` unit tests
1.2.21 `UUID` is set using a ‘constant attribute from function’
1.2.22 `INST_INDEX` and `inst_tally` are set using a constant attr from function
1.2.23 Defines `attr` in `constructor()`, not as `prototype.attr`
1.2.24 Wrapped functions can return instead of write; central ‘wrap/Test-*.6.js’
1.2.25 Initial A-Frame unit tests, using the ‘screengrab’ component
1.2.26 Basic Class.hilite and myInst.hilite A-Frame tests
1.2.27 Test that stat/attr.hilite change on Oom.devMainAFrame’s a-box click
1.2.28 The `Oom.devThumbAFrame*()` set use A-Frame components and primitives
1.2.29 Better `generateRandomColors()` in ‘test/Bases-browser.6.js’
1.3.0 Initial WordPress integration
1.3.1 oominit and oommake generate ‘dist/schema/oom-foo.json’
1.3.2 ‘wp/’ moved into support; simpler plugin naming
1.3.3 oominit and oommake generate ‘dist/php/oom-foo.7.php’
1.3.4 ‘support/wp/plugin/wp-plugin.php’ displays `$oomClasses`
