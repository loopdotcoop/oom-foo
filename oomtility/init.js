!function () { 'use strict'

const NAME     = 'Oomtility Init'
    , VERSION  = '1.0.0'
    , HOMEPAGE = 'http://oomtility.loop.coop'

    , BYLINE   = `\n\n\n\n//\\\\//\\\\ generated by ${NAME} ${VERSION}`
                       + ` //\\\\//\\\\ ${HOMEPAGE} //\\\\//\\\\\n`
    , HELP =
`
${NAME} ${VERSION}
${'='.repeat( (NAME+VERSION).length+1 )}

This Node.js script initialises a new oom repo. You should start with a folder
which just contains a ‘LICENSE’ file and the ‘oomtility/’ folder (plus ‘.git/’).

Installation
------------
If you haven’t done it already, you should set up the \`oominit\` alias:
$ node oomtility/alias.js

Basic Usage
-----------
$ cd /path/to/your/oom/repo/  # A directory with LICENSE, oomtility/ and .git/
$ oominit --version           # Show the current ${NAME} version
$ oominit                     # Initialises the new oom repo

Create Folders
--------------
1. ‘dist/’ and its subfolders ‘demo/’, ‘main/’ and ‘test/’
2. ‘lib/’ and its subfolder ‘test/’
3. ‘src/’ and its subfolders ‘demo/’, ‘main/’ and ‘test/’
4. ‘support/’

Create Files
------------
1.  lib/test/klud.min.js                    An assertion library
2.  lib/test/report.min.js                  Klud’s reporter
3.  lib/polyfill.min.js                     Support Object.assign
4.  lib/jquery-3.1.1.min.js                 Cross-browser JS helpers
5.  lib/traceur-runtime.min.js              Runs ES6 transpiled to ES5
6.  src/main/App.6.js                       Entry-point and namespace
7.  src/test/App-universal.6.js             Browser+Node unit test
8.  support/demo.html                       Lists usage examples
9.  support/ecmaswitch.js                   Switch between JS builds
10. support/test.html                       Test browser + universal
11. .gitignore                              .DS_Store, node_modules etc
12. CHANGELOG                               Lists bumps and commits
13. CNAME                                   Sets the homepage URL
14. index.html                              The repo homepage
15. package.json                            For publishing on NPM
16. README.md                               Human-readable repo info

Options
-------
-h  --help     Show this help message
-v  --version  Show the current ${NAME} version
-r  --remove   Delete all files and folders except LICENSE, oomtility/ and .git/

This script belongs to ${HOMEPAGE}`


//// Validate the environment.
const nodePath   = process.argv.shift()
const scriptPath = process.argv.shift()
if ( '/oomtility/init.js' !== scriptPath.slice(-18) )
    return console.warn('Unexpected environment!')
if ( ( process.cwd() !== scriptPath.slice(0,-18) ) )
    return console.warn('Unexpected CWD, try:\n  $ cd /path/to/your/oom/repo/')
if ('function' !== typeof require)
    return console.warn('Use Node.js instead:\n  $ node oomtility/init.js')




//// SETUP


//// Load library functionality.
const fs = require('fs')
    , readline = require('readline')
    , {
          getJquery311MinJs
        , getTraceurRuntimeMinJs
      } = require('./oomtility-lib.js')

//// Declare variables.
let opt, remove = false, projectDesc

//// Deal with command-line options.
while ( opt = process.argv.shift() ) {
    if ('-h' === opt || '--help'    === opt) return console.log(HELP)
    if ('-v' === opt || '--version' === opt) return console.log(VERSION)
    if ('-r' === opt || '--remove'  === opt) { remove = true; continue }
}

//// Set constants.
const projectLC  = process.cwd().split('/').pop() // lowercase, eg 'foo-bar'
if (! /^oom-[-a-z]{1,8}$/.test(projectLC) ) return console.warn(
    `Project '${projectLC}' fails /^oom-[-a-z]{1,8}$/`)
if (/--|-$/.test(projectLC) ) return console.warn(
    `Project '${projectLC}' passes /--|-$/`)
const projectTC   = lcToTc(projectLC) // titlecase, eg 'FooBar'
const projectDmn  = projectLC + '.loop.coop' // 'foo-bar.loop.coop'
const projectURL  = `https://${projectDmn}/` // 'https://foo-bar.loop.coop/'
const projectRepo = 'https://github.com/loopdotcoop/' + projectLC
const projectNPM  = 'https://www.npmjs.com/package/' + projectLC
const mthNum      = (new Date).getUTCMonth() + 1 // 1 for January
const dateNum     = (new Date).getUTCDate() // 7 for 7th day of the month
const mthDigits   = (10 > mthNum  ? '0' : '') + mthNum // '01' for January
const dateDigits  = (10 > dateNum ? '0' : '') + dateNum // '07' for 7th day
const projectMth  = monthNames()[mthNum] // 'January'
const projectYr   = (new Date).getUTCFullYear() // '2018'
const projectDate = `${projectYr}/${mthDigits}/${dateDigits}`
const projectV    = '1.0.0' // NPM does not update a version like '0.3.6'
const topline     = ('//// ' + ([ //@TODO deal with overlong topline
    projectTC, projectV, projectMth + ' ' + projectYr, projectURL
]).join(' //// ') + ' ///////////////////').substr(0, 80)

//// Remove files if the '-r' or '--remove' option is present.
if (remove) {
    const tally = rmrfCount('LICENSE', 'oomtility', '.git')
    if (! tally)
        return console.warn('No files or folders need to be removed')

    //// Prompt the user for confirmation.
    const rl = readline.createInterface({
              input: process.stdin
            , output: process.stdout
          })
    rl.question(
        `Permanently delete ${tally} item${1===tally?'':'s'}?\n`
      , answer => {
            answer = answer.toLowerCase()
            if ('y' !== answer && 'yes' !== answer) {
                console.log("OK, just answer 'yes' next time to run deletion")
            } else {
                const tally2 = rmrf('LICENSE', 'oomtility', '.git')
                if (1 === tally2)
                    console.warn('Deleted 1 file or folder')
                else
                    console.warn(`Deleted ${tally2} files and/or folders`)
            }
            process.exit(0)
            rl.close()
        }
    )

//// Not a '--remove' run, so must be a normal initialisation.
} else {

    //// Make sure only expected files and folders currently exist.
    if (! fs.existsSync('.git') )    return console.warn(`No .git folder`)
    if (! fs.existsSync('LICENSE') ) return console.warn(`No LICENSE file`)
    const origItems = fs.readdirSync('.')
    for (let i=0, name; name=origItems[i++];)
        if (! /^\.git$|^\.DS_Store$|^oomtility$|^LICENSE$/.test(name) )
            return console.warn(`Unexpected item ${name}\nTry oominit --remove`)

    //// Prompt the user for a description.
    const rl = readline.createInterface({
              input: process.stdin
            , output: process.stdout
          })
    rl.question(
        'Description:\n'
      , answer => {
            projectDesc = answer
            createFolders()
            createFiles()
            rl.close()
        }
    )

}




//// CREATE FOLDERS

function createFolders () {

    //// 1. ‘dist/’ and its subfolders ‘demo/’, ‘main/’ and ‘test/’
    fs.mkdirSync('dist')
    fs.mkdirSync('dist/demo')
    fs.mkdirSync('dist/main')
    fs.mkdirSync('dist/test')

    // 2. ‘lib/’ and its subfolder ‘test/’
    fs.mkdirSync('lib')
    fs.mkdirSync('lib/test')

    // 3. ‘src/’ and its subfolders ‘demo/’, ‘main/’ and ‘test/’
    fs.mkdirSync('src')
    fs.mkdirSync('src/demo')
    fs.mkdirSync('src/main')
    fs.mkdirSync('src/test')

    // 4. ‘support/’
    fs.mkdirSync('support')

}




//// CREATE FILES

function createFiles () {

    //// 1.  lib/test/klud.min.js                    An assertion library
    fs.writeFileSync('lib/test/klud.min.js', getLibTestKludMinJs())

    //// 2.  lib/test/report.min.js                  Klud’s reporter
    fs.writeFileSync('lib/test/report.min.js', getLibTestReportMinJs())

    //// 3.  lib/polyfill.min.js                     Support Object.assign
    fs.writeFileSync('lib/polyfill.min.js', getLibPolyfillMinJs())

    //// 4.  lib/jquery-3.1.1.min.js                 Cross-browser JS helpers
    fs.writeFileSync('lib/jquery-3.1.1.min.js', getJquery311MinJs())

    //// 5.  lib/traceur-runtime.min.js              Runs ES6 transpiled to ES5
    fs.writeFileSync('lib/traceur-runtime.min.js', getTraceurRuntimeMinJs())

    //// 6.  src/main/App.6.js                       Entry-point and namespace
    fs.writeFileSync('src/main/App.6.js', getMainApp6js())

    //// 7.  src/test/App-universal.6.js             Browser+Node unit test
    fs.writeFileSync('src/test/App-universal.6.js', getTestAppUniversal6js())

    //// 7.  support/demo.html                       Lists usage examples
    fs.writeFileSync('support/demo.html', getSupportDemoHtml())

    //// 8.  support/ecmaswitch.js                   Switch between JS builds
    fs.writeFileSync('support/ecmaswitch.js', getSupportEcmaswitchJs())

    //// 9.  support/test.html                       Test browser + universal
    fs.writeFileSync('support/test.html', getSupportTestHtml())

    //// 10. .gitignore                              .DS_Store, node_modules etc
    fs.writeFileSync('.gitignore', getGitignore())

    //// 11. CHANGELOG                               Lists bumps and commits
    fs.writeFileSync('CHANGELOG', getChangelog())

    //// 12. CNAME                                   Sets the homepage URL
    fs.writeFileSync('CNAME', getCname())

    //// 13. index.html                              The repo homepage
    fs.writeFileSync('index.html', getIndexHtml())

    //// 14. package.json                            For publishing on NPM
    fs.writeFileSync('package.json', getPackageJson())

    //// 15. README.md                               Human-readable repo info
    fs.writeFileSync('README.md', getReadmeMd())

}




//// FILE GENERATORS

function getLibTestKludMinJs () {
    return '!function(n){"use strict";function t(n,e){\nif(typeof n!=typeof e)r'
      + 'eturn!1\n;if(n instanceof Function)return n.toString()===e.toString()'
      + '\n;if(n===e||n.valueOf()===e.valueOf())return!0\n;if(!(n instanceof Ob'
      + 'ject))return!1;var i=Object.keys(n)\n;if(i.length!=Object.keys(e).leng'
      + 'th)return!1\n;for(var r in e)if(e.hasOwnProperty(r)){\nif(-1===i.index'
      + 'Of(r))return!1;if(!t(n[r],e[r]))return!1}return!0\n}function e(n){var '
      + 't=function(){var e\n;if(t.called=t.called||[],t.thrown=t.thrown||[],n)'
      + 'try{\ne=n.apply(n.this,arguments),t.thrown.push(void 0)}catch(n){\nt.t'
      + 'hrown.push(n)}return t.called.push(arguments),e};return t}\nvar i=[],r'
      + '=function(){i.length>0?i[0](r):u("finalize")\n},f=n,u=function(){};n.t'
      + 'est=function(s,c,o){\nif("function"==typeof s)return u=s,void(f=c||n)'
      + '\n;var a=function(n){var r={is:f.is,spy:f.spy,eq:f.eq},a=u\n;f.eq=t,f.'
      + 'spy=e,f.is=function(n,t){\n(n=!!n)?a("pass",s,t):a("fail",s,t)},a("beg'
      + 'in",s);try{\nc(function(){\nf.is=r.is,f.spy=r.spy,f.eq=r.eq,a("end",s)'
      + ',i.shift(),n&&n()})\n}catch(n){a("except",s,n)}\no||(a("end",s),f.is=r'
      + '.is,f.spy=r.spy,f.eq=r.eq)}\n;o?(i.push(a),1==i.length&&r()):a()}}(fun'
      + 'ction(){return this\n}.call());\n'
}

function getLibTestReportMinJs () {
    return 'if("undefined"==typeof window)test(function(e,s,l){\n"pass"==e?cons'
      + 'ole.log("\u001b[32m✔\u001b[0m "+s+": "+l):"fail"!=e&&"except"!=e||cons'
      + 'ole.log("\u001b[31m✘\u001b[0m "+s+": "+l)\n});else{var css=document.cr'
      + 'eateElement("style")\n;css.type="text/css",css.innerHTML=\'.kludjs li,'
      + ' .kludjs ul { margin: 0; padding: 0; }.kludjs-pass, .kludjs-except, .k'
      + 'ludjs-fail { list-style: none; }.kludjs-pass:before {content:"✓";margi'
      + 'n-right:1em;color:green;}.kludjs-fail:before, .kludjs-except:before {c'
      + 'ontent:"✖";margin-right:1em;color:red;}.kludjs-singleton ul, .kludjs-s'
      + 'ingleton li { display:inline; }.kludjs-singleton li { margin-left:2em;'
      + ' }\',\ndocument.head.appendChild(css)\n;var el,testEl,assertEl,passed,'
      + 'failed;test(function(e,s,l){\nvoid 0===el&&((el=document.createElement'
      + '("ul")).className="kludjs",\n(document.querySelector(".kludjs")||docum'
      + 'ent.body).appendChild(el)),\n"begin"===e?(passed=failed=0,\ntestEl=doc'
      + 'ument.createElement("li"),assertEl=document.createElement("ul"),\ntest'
      + 'El.appendChild(document.createTextNode(s)),\ntestEl.appendChild(assert'
      + 'El),el.appendChild(testEl)):"end"===e?(testEl.insertBefore(document.cr'
      + 'eateTextNode(" ("+passed+"/"+(passed+failed)+")"),assertEl),\n1===pass'
      + 'ed&&1===passed+failed&&(testEl.className="kludjs-singleton")):"pass"!='
      + '=e&&"fail"!==e&&"except"!==e||(assertEl.innerHTML+=\'<li class="kludjs'
      + '-item kludjs-\'+e+\'">\'+l+"</li>",\n"pass"===e?passed++:failed++)})}'
      + '\n"undefined"!=typeof module&&(module.exports=test);\n'
}

function getLibPolyfillMinJs () {
    return '"function"!=typeof Object.assign&&(Object.assign=function(n,t){\n"u'
      + 'se strict"\n;if(null==n)throw new TypeError("Cannot convert undefined '
      + 'or null to object")\n;for(var r=Object(n),e=1;e<arguments.length;e++){'
      + '\nvar o=arguments[e]\n;if(null!=o)for(var c in o)Object.prototype.hasO'
      + 'wnProperty.call(o,c)&&(r[c]=o[c])\n}return r});\n'
}

//// getLibJquery311MinJs() is defined below

//// getLibTraceurRuntimeMinJs() is defined below

function getMainApp6js () {
    return `${topline}

!function (ROOT) { 'use strict'

const META = {
    NAME:     { value:'${projectTC}' }
  , VERSION:  { value:'${projectV}' }
  , HOMEPAGE: { value:'${projectURL}' }
  , REMARKS:  { value:'${projectDesc}' }
}


//// Make this module and Oom’s toolkit available globally.
const OOM     = ROOT.OOM    = ROOT.OOM    || {}
const TOOLKIT = OOM.TOOLKIT = OOM.TOOLKIT || {}


//// Define \`${projectTC}\`, this module’s main entry point.
const ${projectTC} = OOM.${projectTC} = class {

    constructor (config={}, hub=OOM.hub) {

        //// id: Oom instances have universally unique IDs (57 billion combos).
        Object.defineProperty(this, 'id', { value:
            '123456'.replace( /./g,         c=>rndCh(48,122) )    // 6 x [0-z]
                    .replace( /[:-@\\[-\`]/g, c=>rndCh(97,122) ) }) // 6 x [a-z]

        //// hub: Oom instances keep a reference to the oom-hub.
        Object.defineProperty(this, 'hub', { value:hub })

        //// Validate the configuration object.
        this._validateConstructor(config)

        //// Record config’s values as immutable properties.
        this.validConstructor.forEach( valid => {
            const value = config[valid.name]
            if (null == value) throw Error('I am unreachable?') //@TODO remove
            Object.defineProperty(this, valid.name, { value })
        })

        //// ready: a Promise which resolves when the instance has initialised.
        Object.defineProperty(this, 'ready', { value: this._getReady() })
    }


    //// Returns a Promise which is recorded as the \`ready\` property, after
    //// the constructor() has validated \`config\` and recorded the config
    //// properties. Sub-classes can override _getReady() if they need to do
    //// other async preparation.
    //// Called by: constructor()
    _getReady () {

        //// setupStart: the time that \`new ${projectTC}({...})\` was called.
        if (this.setupStart)
            throw new Error(\`${projectTC}:_getReady(): Can only run once\`)
        Object.defineProperty(this, 'setupStart', { value:TOOLKIT.getNow() })

        //// \`${projectTC}\` does no setup, so could resolve the \`ready\`
        //// Promise immediately. However, to make _getReady()’s behavior
        //// consistent with classes which have a slow async setup, we introduce
        //// a miniscule delay.
        return new Promise( (resolve, reject) => { setTimeout( () => {

            //// setupEnd: the time that \`_getReady()\` finished running.
            Object.defineProperty(this, 'setupEnd', { value:TOOLKIT.getNow() })

            //// Define the instance’s \`ready\` property.
            resolve({
                setupDelay: this.setupEnd - this.setupStart
            })
        }, 0)})

    }


    //// Ensures that the \`config\` argument passed to the \`constructor()\` is
    //// valid.
    //// Called by: constructor()
    _validateConstructor (config) {
        const pfx = \`${projectTC}:_validateConstructor(): \` // error prefix
        if ('object' !== typeof config)
            throw new Error(pfx+\`config is type \${typeof config} not object\`)
        this.validConstructor.forEach( valid => {
            if (! TOOLKIT.applyDefault(valid, config) )
                throw new TypeError(pfx+\`config.\${valid.name} is mandatory\`)
            let err, value = config[valid.name]
            if ( err = TOOLKIT.validateType(valid, value) )
                throw new TypeError(pfx+\`config.\${valid.name} \${err}\`)
            if ( err = TOOLKIT.validateRange(valid, value) )
                throw new RangeError(pfx+\`config.\${valid.name} \${err}\`)
        })
    }


    //// Defines what the \`config\` argument passed to the \`constructor()\`
    //// should look like. Note that all of the \`config\` values are recorded
    //// as immutable instance properties.
    //// Called by: constructor()
    //// Called by: constructor() > _validateConstructor()
    //// Can also be used to auto-generate unit tests and auto-build GUIs.
    get validConstructor () { return [
        {
            title:   'First Parameter'
          , name:    'firstParameter'
          , alias:   'fp'

          , tooltip: 'An example numeric parameter, intended as a placeholder'
          , devtip:  'You should replace this placeholder with a real parameter'
          , form:    'range'
          , power:   1 // eg \`8\` for an exponential range-slider
          , suffix:  'Units'

          , type:    'number'
          , min:     1
          , max:     100
          , step:    1
          , default: 50
        }
      , {
            title:   'Second Parameter'
          , name:    'secondParameter'
          , alias:   'sp'

          , tooltip: 'An example object parameter, intended as a placeholder'
          , devtip:  'You should replace this placeholder with a real parameter'
          , form:    'hidden'

          , type:    (ROOT.AudioContext||ROOT.webkitAudioContext)
        }
    ]}

    xxx (config) {
        const { hub, a, b, c } = this
        const { xx, yy, zz } = config

        ////

    }

}//${projectTC}


//// Add static constants to the \`${projectTC}\` class.
Object.defineProperties(${projectTC}, META)




//// TOOLKIT FUNCTIONS

TOOLKIT.applyDefault = TOOLKIT.applyDefault || ( (valid, config) => {
    if ( config.hasOwnProperty(valid.name) )
        return true // \`true\` here signifies default didn’t need to be applied
    if (! valid.hasOwnProperty('default') )
        return false // \`false\` signifies a missing mandatory field
    config[valid.name] = 'function' === typeof valid.default
      ? valid.default(config) // a value can depend on another config value
      : valid.default
    return true // \`true\` here signifies default was successfully applied
})

TOOLKIT.validateType = TOOLKIT.validateType || ( (valid, value) => {
    if ('string' === typeof valid.type && typeof value !== valid.type)
        return \`is type \${typeof value} not \${valid.type}\`
    if ('function' === typeof valid.type && ! (value instanceof valid.type))
        return \`is not an instance of \${valid.type.name}\`
})

TOOLKIT.validateRange = TOOLKIT.validateRange || ( (valid, value) => {
    if (null != valid.min && valid.min > value)
        return \`is less than the minimum \${valid.min}\`
    if (null != valid.max && valid.max < value)
        return \`is greater than the maximum \${valid.max}\`
    if (null != valid.step && ((value/valid.step) % 1))
        return \`\${value} ÷ \${valid.step} leaves \${(value/valid.step) % 1}\`
})

//// Cross-platform millisecond-timer.
TOOLKIT.getNow = TOOLKIT.getNow || ( () => {
    let now
    if ( // Node.js
        'object'   === typeof ROOT.process
     && 'function' === typeof ROOT.process.hrtime) {
        const hrtime = ROOT.process.hrtime()
        now = ( (hrtime[0] * 1e9) + hrtime[1] ) / 1e6 // in milliseconds
    } else { // modern browser @TODO legacy browser
        now = ROOT.performance.now()
    }
    return now
})




//// PRIVATE FUNCTIONS

//// No operation.
function noop () {}

//// Return a random character within char-code start/end positions 's' and 'e'.
function rndCh (s, e) { return String.fromCharCode(Math.random() * (e-s) + s) }




}( 'object' === typeof global ? global : this ) // \`window\` in a browser

` }

function getTestAppUniversal6js () {
    return `${topline}

//// Node.js: 7.2.0
//// Rhino:   @TODO get Rhino working

//// Windows XP: Firefox 6, Chrome 15 (and probably lower), Opera 12.10
//// Windows 7:  IE 9, Safari 5.1
//// OS X 10.6:  Firefox 6, Chrome 16 (and probably lower), Opera 12, Safari 5.1
//// iOS:        iPad 3rd (iOS 6) Safari, iPad Air (iOS 7) Chrome
//// Android:    Xperia Tipo (Android 4), Pixel XL (Android 7.1)




if ('function' != typeof jQuery) throw Error('jQuery not found')
jQuery( function($) {




test('The ${projectTC} class', () => {
    is('object' === typeof OOM, 'The OOM namespace object exists')
    is('undefined' === typeof ${projectTC}, '${projectTC} is not global')
    let Class = OOM.${projectTC}
    is('function' === typeof Class, '${projectTC} is a function')

    is('${projectTC }' === Class.NAME, 'NAME as expected')
    is('${projectV  }' === Class.VERSION, 'VERSION as expected')
    is('${projectURL}' === Class.HOMEPAGE, 'HOMEPAGE as expected')
})




})
`
}

//// Used by `getSupportDemo/TestHtml()` and `getIndexHtml()`.
function getHtmlTop (config={}) {
    let {
        title
      , description
      , homepage
      , repo
      , npm
      , pathToTop = '../'
      , pathToSupport = ''
    } = config
    return `<!DOCTYPE HTML>
<html lang="en-GB">
<head>




<!-- META -->

<!-- Technical meta -->
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport"
   content="width=device-width, initial-scale=1.0, shrink-to-fit=no,
            maximum-scale=1.0, user-scalable=no">

<!-- Search engine meta -->
<title>${title}</title>
<meta name="description"
   content="${description}">
<link rel="author" href="${pathToTop}README.md">

<!-- Twitter Card, and Open Graph for Facebook, LinkedIn, Google+, etc -->
<meta name="twitter:card"    content="summary">
<meta name="twitter:site"    content="@loopdotcoop">
<meta name="twitter:creator" content="@richplastow">
<meta property="og:type"     content="website">
<meta property="og:locale"   content="en_GB">
<meta property="og:title"    content="${title}">
<meta property="og:url"      content="${homepage}">
<meta property="og:image"
       content="${homepage}support/asset/logo/logo1200.png">
<meta property="og:description"
       content="${description}">

<!-- From realfavicongenerator.net - see README.md for settings -->
<link rel="apple-touch-icon" sizes="180x180" href="${pathToSupport}asset/icon/apple-touch.png">
<link rel="icon" type="image/png" sizes="32x32" href="${pathToSupport}asset/icon/favicon32.png">
<link rel="icon" type="image/png" sizes="16x16" href="${pathToSupport}asset/icon/favicon16.png">
<link rel="manifest"                  href="${pathToSupport}asset/icon/manifest.json">
<link rel="mask-icon" color="#FFFFFF" href="${pathToSupport}asset/icon/safari-pinned-tab.svg">
<link rel="shortcut icon"             href="${pathToSupport}asset/icon/favicon.ico">
<meta name="apple-mobile-web-app-title" content="${title}">
<meta name="application-name"           content="${title}">
<meta name="msapplication-config"       content="${pathToSupport}asset/icon/browserconfig.xml">
<meta name="theme-color"                content="#FFFFFF">




<!-- STYLE -->

<!-- Load fonts as soon as possible -->
<style type="text/css">
@font-face { /* latin */
  font-family: 'Podkova';
  font-style: normal;
  font-weight: 400;
  src: local('Podkova Regular'), local('Podkova-Regular')
    , url('${pathToSupport}asset/font/podkova.woff2') format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA
    , U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2212, U+2215;
}
</style>

<!-- Load styles -->
<link rel="stylesheet" href="${pathToSupport}asset/css/bootstrap.css">
<link rel="stylesheet" href="${pathToSupport}asset/css/main.css">


</head>
<body>




<!-- HEADER -->

<!-- Dropdown menu to select JavaScript format -->
<select id="ecmaswitch" style="float:right" onchange="document.cookie=
  'ecmaswitch='+this.options[this.selectedIndex].value;location.reload()">
  <option value="~0~">ES5 Production</option><!-- default -->
  <option value="~1~">ES5 Minified</option>
  <option value="~2~">ES6 Production</option>
  <option value="~3~">ES6 Development</option>
</select><script>!function(d,f,e){if(e=d.getElementById('ecmaswitch'))f=~~
  d.cookie.split('~')[1],e.options[f].selected=!0}(document)</script>

<!-- Header and Navigation menu -->
<h1 style="display:inline">${title}
  <span id="version">&hellip;</span> <span id="format"></span>&nbsp;</h1>
<div style="float:right">
  <a href="${pathToTop}index.html">Home</a> &nbsp;
  <a href="${repo}">Repo</a> &nbsp;
  <a href="${npm}">NPM</a> &nbsp;
  <a href="${pathToSupport}test.html">Test</a> &nbsp;
  <a href="${pathToSupport}demo.html">Demo</a> &nbsp;&nbsp;
</div>

<h2 style="margin-top:0.2em">${description}</h2>

<!-- Upgrade message for Internet Explorer 8 and below --><!--[if lte IE 8]>
<script>document.getElementById('version').innerHTML='Not Supported'</script>
<h2>Please upgrade to Internet Explorer 9 or higher</h2><![endif]-->
<!-- Begin hiding from IE 8 and below --><!--[if gte IE 9 | !IE ]><!-->




<!-- CONTENT -->
` }

//// Used by `getSupportDemo/TestHtml()` and `getIndexHtml()`.
function getHtmlBottom (config={}) {
    let {
        title = projectTC
    } = config
    return `
<!-- Display the version and format -->
<script>$('#version').html(OOM.${title}.VERSION||'(no VERSION)')
$('#format').html('es5|5 min|6|6 dev'.split('|')[~~document.cookie.split('~')[1]])
</script>

<!-- End hiding from Internet Explorer 8 and below --><!--<![endif]-->

</body>
</html>
` }

function getSupportDemoHtml () {
    return getHtmlTop({
        title:       `${projectTC} Demo`
      , description: `Usage examples for ‘${projectTC}’.`
      , homepage:    projectURL
      , repo:        projectRepo
      , npm:         projectNPM
    }) + `

<!-- BEGIN DYNAMIC SECTION /////////////////////////////////////////////////////
  //// This dynamic section is kept up to date by ‘oomtility/make.js’ ////// -->

<!-- END DYNAMIC SECTION ///////////////////////////////////////////////// -->

<!-- Load the proper format scripts, according to the '#ecmaswitch' menu -->
<script src="ecmaswitch.js"></script>
<script>ECMASwitch.load('../')</script>

` + getHtmlBottom()
 }

function getSupportEcmaswitchJs () {
    return '//// '
+ `ECMASwitch //// 1.0.0 //// January 2018 //// ecmaswitch.loop.coop/ ////////

!function (ROOT) { 'use strict'

//// Create the namespace-object if it does not already exist and add constants.
var ECMASwitch = ROOT.ECMASwitch = ROOT.ECMASwitch || {}
ECMASwitch.NAME     = 'ECMASwitch'
ECMASwitch.VERSION  = '1.0.0'
ECMASwitch.HOMEPAGE = 'http://ecmaswitch.loop.coop/'

//// Polyfill \`document\` for non-browser contexts.
var d = ROOT.document || {
    cookie: '~0~'
  , write:  x=>{} // @TODO let Node.js translate \`<script>\` to \`require()\`
}




//// BEGIN DYNAMIC SECTION /////////////////////////////////////////////////////
//// This dynamic section is kept up to date by ‘oomtility/make.js’ ////////////

var projectLC = '${projectLC}'
var classFiles = 'App'

//// END DYNAMIC SECTION ///////////////////////////////////////////////////////




//// PUBLIC API

////
ECMASwitch.load = function (path, names) {
    if (! path) throw Error("ECMASwitch.load(): Set \`path\`, eg './' or '../'")
    var f = ~~d.cookie.split('~')[1] // script format, 0 - 3
      , p = path + ( (3 == f) ? 'src/' : 'dist/' ) // get path to proper format
      , s = // src values
          (1 == f) ? [ // ES5 Minified
              path + 'lib/traceur-runtime.min.js'
            , p + 'main/' + projectLC + '.5.min.js'
          ]
        : (2 == f) ? [ // ES6 Production
              p + 'main/' + projectLC + '.6.js'
          ]
        : (3 == f) ?   // ES6 Development
              (p+'main/'+classFiles.replace(/,/g,'.6.js|'+p+'main/')+'.6.js')
             .split('|')
        : [            // ES5 Production (the default, if no cookie’s been set)
              path + 'lib/traceur-runtime.min.js'
            , p + 'main/' + projectLC + '.5.js'
          ]
      , B = '<script src="'  // begin
      , E = '"></'+'script>' // end
    names = names || []
    for (var i=0; i<names.length; i++) if (names[i][f]) s.push( names[i][f] )
    s.unshift(path + 'lib/polyfill.min.js') //@TODO only load for legacy browsers
    s.unshift(path + 'lib/jquery-3.1.1.min.js') // start with jQuery
    d.write(B + s.join(E + B) + E)
}


}( 'object' === typeof global ? global : this ) // \`window\` in a browser
` }

function getSupportTestHtml () {
    return getHtmlTop({
        title:       `${projectTC} Test`
      , description: `Unit tests for ‘${projectTC}’.`
      , homepage:    projectURL
      , repo:        projectRepo
      , npm:         projectNPM
    }) + `

<!-- Load the assertion library and its reporter -->
<script src="../lib/test/klud.min.js"></script>
<script src="../lib/test/report.min.js"></script>

<!-- Load the proper format scripts, according to the '#ecmaswitch' menu -->
<script src="../support/ecmaswitch.js"></script>
<script>ECMASwitch.load('../', [
    [
        '../dist/test/${projectLC}-browser.5.js'
      , '../dist/test/${projectLC}-browser.5.js' // no need to minify a test
      , '../dist/test/${projectLC}-browser.6.js'
      , null
    ]
  , [
        '../dist/test/${projectLC}-universal.5.js'
      , '../dist/test/${projectLC}-universal.5.js' // no need to minify a test
      , '../dist/test/${projectLC}-universal.6.js'
      , null
    ]

//// BEGIN DYNAMIC SECTION /////////////////////////////////////////////////////
//// This dynamic section is kept up to date by ‘ootility/make.js’ /////////////

//// END DYNAMIC SECTION ///////////////////////////////////////////////////////

  ])</script>

` + getHtmlBottom()
 }

function getGitignore () {
    return `.DS_Store
*.log
npm-debug.log.*
node_modules/*
` }

function getChangelog () {
    return `# Changelog

` }

function getCname () {
    return `${projectDmn}
` }

function getIndexHtml () {
    return getHtmlTop({
        title:         projectTC
      , description:   projectDesc
      , homepage:      projectURL
      , repo:          projectRepo
      , npm:           projectNPM
      , pathToTop:     ''
      , pathToSupport: 'support/'
    }) + `

<!-- Load the proper format scripts, according to the '#ecmaswitch' menu -->
<script src="support/ecmaswitch.js"></script>
<script>ECMASwitch.load('./')</script>

<!-- Link to the proper homepage domain, if we’re not already there -->
<script>if ( 0 > location.href.indexOf(OomModuleTemplate.HOMEPAGE) )
$('#home').html('<a href="' + OomModuleTemplate.HOMEPAGE + '">Home</a>')
</script>

` + getHtmlBottom()
 }

function getPackageJson (config={}) {
    let {
        name =        projectLC
      , version =     projectV
      , description = projectDesc
      , homepage =    projectURL
      , repo =        projectRepo
    } = config
    return `{
  "name": "${name}",
  "version": "${version}",
  "description": "${description}",
  "main": "dist/main/${name}.min.5.js",
  "directories": {
    "example": "support"
  },
  "dependencies": {
  },
  "devDependencies": {
  },
  "scripts": {
    "test": "node oomtility/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+${repo}.git"
  },
  "keywords": [
    "Oom",
    "🔅",
    "Interactive",
    "🌟",
    "3d",
    "🍍",
    "Sequencer",
    "✨",
    "Instrument",
    "🎉",
    "Seqin",
    "🔸",
    "Web Audio"
  ],
  "author": "Rich Plastow <rich@richplastow.com> (https://richplastow.com/)",
  "contributors": [
    "Loop.Coop <info@loop.coop> (http://loop.coop/)"
  ],
  "license": "MIT",
  "bugs": {
    "url": "${repo}/issues"
  },
  "homepage": "${homepage}"
}
` }

function getReadmeMd (config={}) {
    let {
        title =       projectTC
      , name =        projectLC
      , version =     projectV
      , description = projectDesc
      , date =        projectDate
      , homepage =    projectURL
      , repo =        projectRepo
      , npm =         projectNPM
    } = config
    return `
# ${title}

#### ${description}

+ __Last update:__  ${date}
+ __Version:__      ${version}

[Homepage](${homepage}) &nbsp;
[Repo](${repo}) &nbsp;
[NPM](${npm}) &nbsp;
[Changelog](${homepage}CHANGELOG) &nbsp;
[Test](${homepage}support/test.html) &nbsp;
[Demo](${homepage}support/demo.html)

Oom &nbsp;
🔅 &nbsp;
Interactive &nbsp;
🌟 &nbsp;
3d &nbsp;
🍍 &nbsp;
Sequencer &nbsp;
✨ &nbsp;
Instrument &nbsp;
🎉 &nbsp;
Seqin &nbsp;
🔸 &nbsp;
Web Audio &nbsp;




## Tested

+ __Android:__             Browser 4.4, Chrome 63
+ __iOS 11 (iPhone 5S):__  Safari 11
+ __iOS 7 (iPhone 5S):__   Safari 7
+ __Windows 10:__          Edge 14, IE 11
+ __Windows 7:__           IE 10
+ __Windows XP:__          Firefox 42, Chrome 36, Opera 23
+ __OS X Mountain Lion:__  Safari 6.2
+ __OS X El Capitan:__     Node 7.2.0 and Firefox 57 (dev browser)




## Author

Designed, developed and authored by Rich Plastow for Loop.Coop.

+ __Website:__
  [richplastow.com](https://richplastow.com/)
  [loop.coop](http://loop.coop/)
+ __GitHub:__
  [richplastow](https://github.com/richplastow) &nbsp;
  [loopdotcoop](https://github.com/loopdotcoop)
+ __Twitter:__
  [@richplastow](https://twitter.com/richplastow) &nbsp;
  [@loopdotcoop](https://twitter.com/loopdotcoop)
+ __Location:__
  Brighton, UK and Kerala, India




## Module

+ __Languages:__
  - English
+ __Software:__
  - Atom
  - Git
+ __Standards:__
  - HTML5
  - CSS3
  - JavaScript ES6
+ __Dependencies:__
  - Bootstrap 4.0.0-beta.2




## Icon

+ __Generator:__    realfavicongenerator.net
+ __iOS:__          background #FFFFFF, margin 9px
+ __Android:__      background #FFFFFF, margin 12px, browser-mode
+ __Metro:__        background #FFFFFF, Big square icon only
+ __OS X Safari:__  theme color #FFFFFF
+ __Path:__         /asset/icon @TODO fix this for index.html and support HTMLs
+ __Compression:__  Very high compression factor
+ __Scaling:__      Lanczos
+ __App Name:__     Oom Module Template
+ __Post:__         Six PNGs thru tinypng.com




` }

function getLibJquery311MinJs () {
    return 'console.log("put getLibJquery311MinJs() back in")\n'
}

function getLibTraceurRuntimeMinJs () {
    return 'console.log("put getLibTraceurRuntimeMinJs() back in")\n'
}




//// UTILITY

//// Begin recursively deleting files and folders.
function rmrf(...except) {
    return rmrfRecurse(except, '.')
}

//// Return the number of files and folders which would be deleted by `rmrf()`.
function rmrfCount(...except) {
    return rmrfRecurse(except, '.', true)
}

//// Recursively delete files and folders.
function rmrfRecurse(except, path, dummyrun) {
    let tally = 0
    fs.readdirSync(path).forEach(
        item => {
            if ( -1 !== except.indexOf(item) ) return
            const pathSlashItem = `${path}/${item}`
            const isDir = fs.statSync(pathSlashItem).isDirectory()
            if (dummyrun)
                console.log(`Will remove ${pathSlashItem}${(isDir ? '/' : '')}`)
            if (isDir) {
                tally += rmrfRecurse(except, pathSlashItem, dummyrun)
                if (! dummyrun) fs.rmdirSync(pathSlashItem)
            } else {
                if (! dummyrun) fs.unlinkSync(pathSlashItem)
            }
            tally++
        }
    )
    return tally
}

//// Lowercase to Titlecase, eg 'foo-bar' to 'FooBar'.
function lcToTc(lc) {
    return lc.split('-').map( w => w[0].toUpperCase() + w.substr(1) ).join('')
}

//// Used to get `projectMth`.
function monthNames() {
    return [
        '' // NOT zero indexed
      , 'January'
      , 'February'
      , 'March'
      , 'April'
      , 'May'
      , 'June'
      , 'July'
      , 'August'
      , 'September'
      , 'October'
      , 'November'
      , 'December'
    ]
}

}()
